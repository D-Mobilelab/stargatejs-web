{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 89f7ee4cd7e559cd4815","webpack:///./src/main.js","webpack:///./~/promise-polyfill/promise.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/process/browser.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","Promise","device","conf","getWebappStartUrl","getWebappOrigin","getManifestValue","initialize","options","callback","resolve","isInitialized","isOpen","isHybrid","openUrl","googleLogin","addListener","checkConnection","getDeviceID","goToLocalIndex","goToWebIndex","getVersion","getAppInformation","getAvailableFeatures","setAnalyticsCallback","setConversionDataCallback","iaplight","reject","restore","getProductInfo","subscribe","isSubscribed","getActiveSubscriptionsInfo","inAppPurchaseSubscription","inAppRestore","inAppProductInfo","push","setScheduledNotify","socialShare","socialShareAvailable","setStatusbarVisibility","setImmediate","noop","bind","fn","thisArg","apply","arguments","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","newValue","then","finale","length","_unhandledRejectionFn","i","len","Handler","done","value","reason","ex","setTimeoutFunc","setTimeout","prototype","prom","all","arr","args","Array","slice","res","val","remaining","constructor","race","values","err","console","warn","_setImmediateFn","_setUnhandledRejectionFn","Timeout","clearFn","_id","_clearFn","Function","window","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","global","process","tasksByHandle","run","task","runIfPresent","currentlyRunningATask","registerImmediate","nextHandle","doc","document","attachTo","Object","getPrototypeOf","toString","nextTick","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","Math","random","onGlobalMessage","event","source","data","indexOf","addEventListener","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","Item","array","title","browser","env","argv","version","versions","on","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"stargate-web.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Stargate\"] = factory();\n\telse\n\t\troot[\"Stargate\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 89f7ee4cd7e559cd4815","var Promise = require('promise-polyfill');\n\n/**\n * StargateJS Web interface\n * @namespace Stargate\n * @global\n */\n\nmodule.exports = new function(){\n    this.device = function() {};\n\n    this.conf = {\n        getWebappStartUrl: function() {},\n        getWebappOrigin: function() {},\n        getManifestValue: function() {}\n    };\n\n    /**\n    * @ngdoc function\n    * @name initialize\n    * @methodOf Stargate\n    *\n    * @description Initialize Stargate\n    *\n    * @param {Object} options configuration object\n    * @param {Function} callback called when initialization is finished,\n    * you can use also the promise resolution. The callback will be called with\n    * an argument that indicate if we're running inside the hybrid app.\n    * \n    * @return {Promise} promise will be resolved when start is completed, rejected if failed.\n    * The promise will be resolved with an argument that indicate if we're running inside the hybrid app.\n    *\n    */\n    this.initialize = function(options, callback) {\n        if (typeof callback === 'function') {\n            callback(false);\n        }\n        return Promise.resolve(false);\n    };\n\n    /**\n    * @ngdoc function\n    * @name isInitialized\n    * @methodOf Stargate\n    *\n    * @description initialization status\n    *\n    * @return {Boolean} true when Stargate is initialized: initialize method finished execution\n    */\n    this.isInitialized = function() {\n        return true;\n    };\n    \n    /**\n    * @ngdoc function\n    * @name isOpen\n    * @methodOf Stargate\n    *\n    * @description communication channel status\n    *\n    * @return {Boolean} true when Stargate is ready\n    */\n    this.isOpen = function() {\n        return false;\n    };\n    \n    /**\n    * @ngdoc function\n    * @name isHybrid\n    * @methodOf Stargate\n    *\n    * @description hybrid status\n    *\n    * @return {Boolean} true when running as native app\n    */\n    this.isHybrid = function() {\n        return false;\n    };\n\n    /**\n    * @ngdoc function\n    * @name openUrl\n    * @methodOf Stargate\n    *\n    * @description openUrl\n    *\n    * @return {Boolean} true when url as been opened\n    */\n    this.openUrl = function() {\n        return false;\n    };\n\n    /**\n    * @ngdoc function\n    * @name googleLogin\n    * @methodOf Stargate\n    *\n    * @description googleLogin\n    *\n    */\n    this.googleLogin = function() {};\n\n    /**\n    * @ngdoc function\n    * @name addListener\n    * @methodOf Stargate\n    *\n    * @description addListener\n    *\n    */\n    this.addListener = function() {};\n\n    /**\n    * @ngdoc function\n    * @name checkConnection\n    * @methodOf Stargate\n    *\n    * @description checkConnection\n    *\n    */\n    this.checkConnection = function() {};\n\n    /**\n    * @ngdoc function\n    * @name getDeviceID\n    * @methodOf Stargate\n    *\n    * @description getDeviceID\n    *\n    */\n    this.getDeviceID = function() {};\n\n    /**\n    * @ngdoc function\n    * @name goToLocalIndex\n    * @methodOf Stargate\n    *\n    * @description goToLocalIndex\n    *\n    */\n    this.goToLocalIndex = function() {};\n\n    /**\n    * @ngdoc function\n    * @name goToWebIndex\n    * @methodOf Stargate\n    *\n    * @description goToWebIndex\n    *\n    */\n    this.goToWebIndex = function() {};\n\n    /**\n    * @ngdoc function\n    * @name getVersion\n    * @methodOf Stargate\n    *\n    * @description getVersion\n    *\n    */\n    this.getVersion = function() {\n        return '1.0-web';\n    };\n\n    /**\n    * @ngdoc function\n    * @name getAppInformation\n    * @methodOf Stargate\n    *\n    * @description getAppInformation\n    *\n    */\n    this.getAppInformation = function() {};\n\n    /**\n    * @ngdoc function\n    * @name getAvailableFeatures\n    * @methodOf Stargate\n    *\n    * @description getAvailableFeatures\n    *\n    */\n    this.getAvailableFeatures = function() {};\n\n    /**\n    * @ngdoc function\n    * @name setAnalyticsCallback\n    * @methodOf Stargate\n    *\n    * @description setAnalyticsCallback\n    *\n    */\n    this.setAnalyticsCallback = function() {};\n\n    /**\n    * @ngdoc function\n    * @name setConversionDataCallback\n    * @methodOf Stargate\n    *\n    * @description setConversionDataCallback\n    *\n    */\n    this.setConversionDataCallback = function() {};\n\n\n    this.iaplight = {\n        initialize: function() {\n            return Promise.reject('Not implemented');\n        },\n        restore: function() {\n            return Promise.reject('Not implemented');\n        },\n        getProductInfo: function() {\n            return Promise.reject('Not implemented');\n        },\n        subscribe: function() {\n            return Promise.reject('Not implemented');\n        },\n        isSubscribed: function() {\n            return Promise.reject('Not implemented');\n        },\n        getActiveSubscriptionsInfo: function() {\n            return Promise.reject('Not implemented');\n        }\n    };\n    \n    /**\n    * @ngdoc function\n    * @name inAppPurchaseSubscription\n    * @methodOf Stargate\n    *\n    * @description inAppPurchaseSubscription\n    *\n    */\n    this.inAppPurchaseSubscription = function() {};\n\n    /**\n    * @ngdoc function\n    * @name inAppRestore\n    * @methodOf Stargate\n    *\n    * @description inAppRestore\n    *\n    */\n    this.inAppRestore = function() {};\n\n    /**\n    * @ngdoc function\n    * @name inAppProductInfo\n    * @methodOf Stargate\n    *\n    * @description inAppProductInfo\n    *\n    */\n    this.inAppProductInfo = function() {};\n    \n    this.push = {\n        initialize: function() {\n            return Promise.reject('Not implemented');\n        },\n        setScheduledNotify: function() {\n            return Promise.reject('Not implemented');\n        }\n    };\n\n    /**\n    * @ngdoc function\n    * @name socialShare\n    * @methodOf Stargate\n    *\n    * @description socialShare\n    *\n    */\n    this.socialShare = function() {};\n\n    /**\n    * @ngdoc function\n    * @name socialShareAvailable\n    * @methodOf Stargate\n    *\n    * @description socialShareAvailable\n    *\n    */\n    this.socialShareAvailable = function() {};\n    \n    /**\n    * @ngdoc function\n    * @name setStatusbarVisibility\n    * @methodOf Stargate\n    *\n    * @description setStatusbarVisibility\n    *\n    */\n    this.setStatusbarVisibility = function() {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 0\n// module chunks = 0","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise-polyfill/promise.js\n// module id = 1\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 2\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 3\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}

/* stargatejs-web 1.0.0 */