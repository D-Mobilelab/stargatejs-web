{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///stargate-web.js","webpack:///webpack/bootstrap 89f7ee4cd7e559cd4815","webpack:///./src/main.js","webpack:///./~/promise-polyfill/promise.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/process/browser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Promise","device","conf","getWebappStartUrl","getWebappOrigin","getManifestValue","initialize","options","callback","resolve","isInitialized","isOpen","isHybrid","openUrl","googleLogin","addListener","checkConnection","getDeviceID","goToLocalIndex","goToWebIndex","getVersion","getAppInformation","getAvailableFeatures","setAnalyticsCallback","setConversionDataCallback","iaplight","reject","restore","getProductInfo","subscribe","isSubscribed","getActiveSubscriptionsInfo","inAppPurchaseSubscription","inAppRestore","inAppProductInfo","push","setScheduledNotify","socialShare","socialShareAvailable","setStatusbarVisibility","setImmediate","noop","bind","fn","thisArg","apply","arguments","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","promise","ret","e","newValue","then","finale","length","_unhandledRejectionFn","i","len","Handler","done","value","reason","ex","setTimeoutFunc","setTimeout","prototype","prom","all","arr","args","Array","slice","res","val","remaining","constructor","race","values","err","console","warn","_setImmediateFn","_setUnhandledRejectionFn","Timeout","clearFn","_id","_clearFn","Function","window","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","global","process","task","tasksByHandle","nextHandle","registerImmediate","run","runIfPresent","currentlyRunningATask","doc","document","attachTo","Object","getPrototypeOf","toString","nextTick","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","Math","random","onGlobalMessage","event","source","data","indexOf","addEventListener","attachEvent","MessageChannel","channel","port1","port2","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","Item","array","title","browser","env","argv","version","versions","on","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"stargate-web.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Stargate\"] = factory();\n\telse\n\t\troot[\"Stargate\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Stargate\"] = factory();\n\telse\n\t\troot[\"Stargate\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Promise = __webpack_require__(1);\n\t\n\t/**\n\t * StargateJS Web interface\n\t * @namespace Stargate\n\t * @global\n\t */\n\t\n\tmodule.exports = new function(){\n\t    this.device = function() {};\n\t\n\t    this.conf = {\n\t        getWebappStartUrl: function() {},\n\t        getWebappOrigin: function() {},\n\t        getManifestValue: function() {}\n\t    };\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name initialize\n\t    * @methodOf Stargate\n\t    *\n\t    * @description Initialize Stargate\n\t    *\n\t    * @param {Object} options configuration object\n\t    * @param {Function} callback called when initialization is finished,\n\t    * you can use also the promise resolution. The callback will be called with\n\t    * an argument that indicate if we're running inside the hybrid app.\n\t    * \n\t    * @return {Promise} promise will be resolved when start is completed, rejected if failed.\n\t    * The promise will be resolved with an argument that indicate if we're running inside the hybrid app.\n\t    *\n\t    */\n\t    this.initialize = function(options, callback) {\n\t        if (typeof callback === 'function') {\n\t            callback(false);\n\t        }\n\t        return Promise.resolve(false);\n\t    };\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name isInitialized\n\t    * @methodOf Stargate\n\t    *\n\t    * @description initialization status\n\t    *\n\t    * @return {Boolean} true when Stargate is initialized: initialize method finished execution\n\t    */\n\t    this.isInitialized = function() {\n\t        return true;\n\t    };\n\t    \n\t    /**\n\t    * @ngdoc function\n\t    * @name isOpen\n\t    * @methodOf Stargate\n\t    *\n\t    * @description communication channel status\n\t    *\n\t    * @return {Boolean} true when Stargate is ready\n\t    */\n\t    this.isOpen = function() {\n\t        return false;\n\t    };\n\t    \n\t    /**\n\t    * @ngdoc function\n\t    * @name isHybrid\n\t    * @methodOf Stargate\n\t    *\n\t    * @description hybrid status\n\t    *\n\t    * @return {Boolean} true when running as native app\n\t    */\n\t    this.isHybrid = function() {\n\t        return false;\n\t    };\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name openUrl\n\t    * @methodOf Stargate\n\t    *\n\t    * @description openUrl\n\t    *\n\t    * @return {Boolean} true when url as been opened\n\t    */\n\t    this.openUrl = function() {\n\t        return false;\n\t    };\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name googleLogin\n\t    * @methodOf Stargate\n\t    *\n\t    * @description googleLogin\n\t    *\n\t    */\n\t    this.googleLogin = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name addListener\n\t    * @methodOf Stargate\n\t    *\n\t    * @description addListener\n\t    *\n\t    */\n\t    this.addListener = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name checkConnection\n\t    * @methodOf Stargate\n\t    *\n\t    * @description checkConnection\n\t    *\n\t    */\n\t    this.checkConnection = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name getDeviceID\n\t    * @methodOf Stargate\n\t    *\n\t    * @description getDeviceID\n\t    *\n\t    */\n\t    this.getDeviceID = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name goToLocalIndex\n\t    * @methodOf Stargate\n\t    *\n\t    * @description goToLocalIndex\n\t    *\n\t    */\n\t    this.goToLocalIndex = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name goToWebIndex\n\t    * @methodOf Stargate\n\t    *\n\t    * @description goToWebIndex\n\t    *\n\t    */\n\t    this.goToWebIndex = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name getVersion\n\t    * @methodOf Stargate\n\t    *\n\t    * @description getVersion\n\t    *\n\t    */\n\t    this.getVersion = function() {\n\t        return '1.0-web';\n\t    };\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name getAppInformation\n\t    * @methodOf Stargate\n\t    *\n\t    * @description getAppInformation\n\t    *\n\t    */\n\t    this.getAppInformation = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name getAvailableFeatures\n\t    * @methodOf Stargate\n\t    *\n\t    * @description getAvailableFeatures\n\t    *\n\t    */\n\t    this.getAvailableFeatures = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name setAnalyticsCallback\n\t    * @methodOf Stargate\n\t    *\n\t    * @description setAnalyticsCallback\n\t    *\n\t    */\n\t    this.setAnalyticsCallback = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name setConversionDataCallback\n\t    * @methodOf Stargate\n\t    *\n\t    * @description setConversionDataCallback\n\t    *\n\t    */\n\t    this.setConversionDataCallback = function() {};\n\t\n\t\n\t    this.iaplight = {\n\t        initialize: function() {\n\t            return Promise.reject('Not implemented');\n\t        },\n\t        restore: function() {\n\t            return Promise.reject('Not implemented');\n\t        },\n\t        getProductInfo: function() {\n\t            return Promise.reject('Not implemented');\n\t        },\n\t        subscribe: function() {\n\t            return Promise.reject('Not implemented');\n\t        },\n\t        isSubscribed: function() {\n\t            return Promise.reject('Not implemented');\n\t        },\n\t        getActiveSubscriptionsInfo: function() {\n\t            return Promise.reject('Not implemented');\n\t        }\n\t    };\n\t    \n\t    /**\n\t    * @ngdoc function\n\t    * @name inAppPurchaseSubscription\n\t    * @methodOf Stargate\n\t    *\n\t    * @description inAppPurchaseSubscription\n\t    *\n\t    */\n\t    this.inAppPurchaseSubscription = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name inAppRestore\n\t    * @methodOf Stargate\n\t    *\n\t    * @description inAppRestore\n\t    *\n\t    */\n\t    this.inAppRestore = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name inAppProductInfo\n\t    * @methodOf Stargate\n\t    *\n\t    * @description inAppProductInfo\n\t    *\n\t    */\n\t    this.inAppProductInfo = function() {};\n\t    \n\t    this.push = {\n\t        initialize: function() {\n\t            return Promise.reject('Not implemented');\n\t        },\n\t        setScheduledNotify: function() {\n\t            return Promise.reject('Not implemented');\n\t        }\n\t    };\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name socialShare\n\t    * @methodOf Stargate\n\t    *\n\t    * @description socialShare\n\t    *\n\t    */\n\t    this.socialShare = function() {};\n\t\n\t    /**\n\t    * @ngdoc function\n\t    * @name socialShareAvailable\n\t    * @methodOf Stargate\n\t    *\n\t    * @description socialShareAvailable\n\t    *\n\t    */\n\t    this.socialShareAvailable = function() {};\n\t    \n\t    /**\n\t    * @ngdoc function\n\t    * @name setStatusbarVisibility\n\t    * @methodOf Stargate\n\t    *\n\t    * @description setStatusbarVisibility\n\t    *\n\t    */\n\t    this.setStatusbarVisibility = function() {};\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {\n\t\n\t  // Store setTimeout reference so promise-polyfill will be unaffected by\n\t  // other code modifying setTimeout (like sinon.useFakeTimers())\n\t  var setTimeoutFunc = setTimeout;\n\t\n\t  function noop() {}\n\t  \n\t  // Polyfill for Function.prototype.bind\n\t  function bind(fn, thisArg) {\n\t    return function () {\n\t      fn.apply(thisArg, arguments);\n\t    };\n\t  }\n\t\n\t  function Promise(fn) {\n\t    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n\t    if (typeof fn !== 'function') throw new TypeError('not a function');\n\t    this._state = 0;\n\t    this._handled = false;\n\t    this._value = undefined;\n\t    this._deferreds = [];\n\t\n\t    doResolve(fn, this);\n\t  }\n\t\n\t  function handle(self, deferred) {\n\t    while (self._state === 3) {\n\t      self = self._value;\n\t    }\n\t    if (self._state === 0) {\n\t      self._deferreds.push(deferred);\n\t      return;\n\t    }\n\t    self._handled = true;\n\t    Promise._immediateFn(function () {\n\t      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t      if (cb === null) {\n\t        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t        return;\n\t      }\n\t      var ret;\n\t      try {\n\t        ret = cb(self._value);\n\t      } catch (e) {\n\t        reject(deferred.promise, e);\n\t        return;\n\t      }\n\t      resolve(deferred.promise, ret);\n\t    });\n\t  }\n\t\n\t  function resolve(self, newValue) {\n\t    try {\n\t      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\t      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n\t        var then = newValue.then;\n\t        if (newValue instanceof Promise) {\n\t          self._state = 3;\n\t          self._value = newValue;\n\t          finale(self);\n\t          return;\n\t        } else if (typeof then === 'function') {\n\t          doResolve(bind(then, newValue), self);\n\t          return;\n\t        }\n\t      }\n\t      self._state = 1;\n\t      self._value = newValue;\n\t      finale(self);\n\t    } catch (e) {\n\t      reject(self, e);\n\t    }\n\t  }\n\t\n\t  function reject(self, newValue) {\n\t    self._state = 2;\n\t    self._value = newValue;\n\t    finale(self);\n\t  }\n\t\n\t  function finale(self) {\n\t    if (self._state === 2 && self._deferreds.length === 0) {\n\t      Promise._immediateFn(function() {\n\t        if (!self._handled) {\n\t          Promise._unhandledRejectionFn(self._value);\n\t        }\n\t      });\n\t    }\n\t\n\t    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t      handle(self, self._deferreds[i]);\n\t    }\n\t    self._deferreds = null;\n\t  }\n\t\n\t  function Handler(onFulfilled, onRejected, promise) {\n\t    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t    this.promise = promise;\n\t  }\n\t\n\t  /**\n\t   * Take a potentially misbehaving resolver function and make sure\n\t   * onFulfilled and onRejected are only called once.\n\t   *\n\t   * Makes no guarantees about asynchrony.\n\t   */\n\t  function doResolve(fn, self) {\n\t    var done = false;\n\t    try {\n\t      fn(function (value) {\n\t        if (done) return;\n\t        done = true;\n\t        resolve(self, value);\n\t      }, function (reason) {\n\t        if (done) return;\n\t        done = true;\n\t        reject(self, reason);\n\t      });\n\t    } catch (ex) {\n\t      if (done) return;\n\t      done = true;\n\t      reject(self, ex);\n\t    }\n\t  }\n\t\n\t  Promise.prototype['catch'] = function (onRejected) {\n\t    return this.then(null, onRejected);\n\t  };\n\t\n\t  Promise.prototype.then = function (onFulfilled, onRejected) {\n\t    var prom = new (this.constructor)(noop);\n\t\n\t    handle(this, new Handler(onFulfilled, onRejected, prom));\n\t    return prom;\n\t  };\n\t\n\t  Promise.all = function (arr) {\n\t    var args = Array.prototype.slice.call(arr);\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      if (args.length === 0) return resolve([]);\n\t      var remaining = args.length;\n\t\n\t      function res(i, val) {\n\t        try {\n\t          if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t            var then = val.then;\n\t            if (typeof then === 'function') {\n\t              then.call(val, function (val) {\n\t                res(i, val);\n\t              }, reject);\n\t              return;\n\t            }\n\t          }\n\t          args[i] = val;\n\t          if (--remaining === 0) {\n\t            resolve(args);\n\t          }\n\t        } catch (ex) {\n\t          reject(ex);\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < args.length; i++) {\n\t        res(i, args[i]);\n\t      }\n\t    });\n\t  };\n\t\n\t  Promise.resolve = function (value) {\n\t    if (value && typeof value === 'object' && value.constructor === Promise) {\n\t      return value;\n\t    }\n\t\n\t    return new Promise(function (resolve) {\n\t      resolve(value);\n\t    });\n\t  };\n\t\n\t  Promise.reject = function (value) {\n\t    return new Promise(function (resolve, reject) {\n\t      reject(value);\n\t    });\n\t  };\n\t\n\t  Promise.race = function (values) {\n\t    return new Promise(function (resolve, reject) {\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        values[i].then(resolve, reject);\n\t      }\n\t    });\n\t  };\n\t\n\t  // Use polyfill for setImmediate for performance gains\n\t  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n\t    function (fn) {\n\t      setTimeoutFunc(fn, 0);\n\t    };\n\t\n\t  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t    if (typeof console !== 'undefined' && console) {\n\t      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the immediate function to execute callbacks\n\t   * @param fn {function} Function to execute\n\t   * @deprecated\n\t   */\n\t  Promise._setImmediateFn = function _setImmediateFn(fn) {\n\t    Promise._immediateFn = fn;\n\t  };\n\t\n\t  /**\n\t   * Change the function to execute on unhandled rejection\n\t   * @param {function} fn Function to execute on unhandled rejection\n\t   * @deprecated\n\t   */\n\t  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n\t    Promise._unhandledRejectionFn = fn;\n\t  };\n\t  \n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = Promise;\n\t  } else if (!root.Promise) {\n\t    root.Promise = Promise;\n\t  }\n\t\n\t})(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(3);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// stargate-web.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 89f7ee4cd7e559cd4815","var Promise = require('promise-polyfill');\n\n/**\n * StargateJS Web interface\n * @namespace Stargate\n * @global\n */\n\nmodule.exports = new function(){\n    this.device = function() {};\n\n    this.conf = {\n        getWebappStartUrl: function() {},\n        getWebappOrigin: function() {},\n        getManifestValue: function() {}\n    };\n\n    /**\n    * @ngdoc function\n    * @name initialize\n    * @methodOf Stargate\n    *\n    * @description Initialize Stargate\n    *\n    * @param {Object} options configuration object\n    * @param {Function} callback called when initialization is finished,\n    * you can use also the promise resolution. The callback will be called with\n    * an argument that indicate if we're running inside the hybrid app.\n    * \n    * @return {Promise} promise will be resolved when start is completed, rejected if failed.\n    * The promise will be resolved with an argument that indicate if we're running inside the hybrid app.\n    *\n    */\n    this.initialize = function(options, callback) {\n        if (typeof callback === 'function') {\n            callback(false);\n        }\n        return Promise.resolve(false);\n    };\n\n    /**\n    * @ngdoc function\n    * @name isInitialized\n    * @methodOf Stargate\n    *\n    * @description initialization status\n    *\n    * @return {Boolean} true when Stargate is initialized: initialize method finished execution\n    */\n    this.isInitialized = function() {\n        return true;\n    };\n    \n    /**\n    * @ngdoc function\n    * @name isOpen\n    * @methodOf Stargate\n    *\n    * @description communication channel status\n    *\n    * @return {Boolean} true when Stargate is ready\n    */\n    this.isOpen = function() {\n        return false;\n    };\n    \n    /**\n    * @ngdoc function\n    * @name isHybrid\n    * @methodOf Stargate\n    *\n    * @description hybrid status\n    *\n    * @return {Boolean} true when running as native app\n    */\n    this.isHybrid = function() {\n        return false;\n    };\n\n    /**\n    * @ngdoc function\n    * @name openUrl\n    * @methodOf Stargate\n    *\n    * @description openUrl\n    *\n    * @return {Boolean} true when url as been opened\n    */\n    this.openUrl = function() {\n        return false;\n    };\n\n    /**\n    * @ngdoc function\n    * @name googleLogin\n    * @methodOf Stargate\n    *\n    * @description googleLogin\n    *\n    */\n    this.googleLogin = function() {};\n\n    /**\n    * @ngdoc function\n    * @name addListener\n    * @methodOf Stargate\n    *\n    * @description addListener\n    *\n    */\n    this.addListener = function() {};\n\n    /**\n    * @ngdoc function\n    * @name checkConnection\n    * @methodOf Stargate\n    *\n    * @description checkConnection\n    *\n    */\n    this.checkConnection = function() {};\n\n    /**\n    * @ngdoc function\n    * @name getDeviceID\n    * @methodOf Stargate\n    *\n    * @description getDeviceID\n    *\n    */\n    this.getDeviceID = function() {};\n\n    /**\n    * @ngdoc function\n    * @name goToLocalIndex\n    * @methodOf Stargate\n    *\n    * @description goToLocalIndex\n    *\n    */\n    this.goToLocalIndex = function() {};\n\n    /**\n    * @ngdoc function\n    * @name goToWebIndex\n    * @methodOf Stargate\n    *\n    * @description goToWebIndex\n    *\n    */\n    this.goToWebIndex = function() {};\n\n    /**\n    * @ngdoc function\n    * @name getVersion\n    * @methodOf Stargate\n    *\n    * @description getVersion\n    *\n    */\n    this.getVersion = function() {\n        return '1.0-web';\n    };\n\n    /**\n    * @ngdoc function\n    * @name getAppInformation\n    * @methodOf Stargate\n    *\n    * @description getAppInformation\n    *\n    */\n    this.getAppInformation = function() {};\n\n    /**\n    * @ngdoc function\n    * @name getAvailableFeatures\n    * @methodOf Stargate\n    *\n    * @description getAvailableFeatures\n    *\n    */\n    this.getAvailableFeatures = function() {};\n\n    /**\n    * @ngdoc function\n    * @name setAnalyticsCallback\n    * @methodOf Stargate\n    *\n    * @description setAnalyticsCallback\n    *\n    */\n    this.setAnalyticsCallback = function() {};\n\n    /**\n    * @ngdoc function\n    * @name setConversionDataCallback\n    * @methodOf Stargate\n    *\n    * @description setConversionDataCallback\n    *\n    */\n    this.setConversionDataCallback = function() {};\n\n\n    this.iaplight = {\n        initialize: function() {\n            return Promise.reject('Not implemented');\n        },\n        restore: function() {\n            return Promise.reject('Not implemented');\n        },\n        getProductInfo: function() {\n            return Promise.reject('Not implemented');\n        },\n        subscribe: function() {\n            return Promise.reject('Not implemented');\n        },\n        isSubscribed: function() {\n            return Promise.reject('Not implemented');\n        },\n        getActiveSubscriptionsInfo: function() {\n            return Promise.reject('Not implemented');\n        }\n    };\n    \n    /**\n    * @ngdoc function\n    * @name inAppPurchaseSubscription\n    * @methodOf Stargate\n    *\n    * @description inAppPurchaseSubscription\n    *\n    */\n    this.inAppPurchaseSubscription = function() {};\n\n    /**\n    * @ngdoc function\n    * @name inAppRestore\n    * @methodOf Stargate\n    *\n    * @description inAppRestore\n    *\n    */\n    this.inAppRestore = function() {};\n\n    /**\n    * @ngdoc function\n    * @name inAppProductInfo\n    * @methodOf Stargate\n    *\n    * @description inAppProductInfo\n    *\n    */\n    this.inAppProductInfo = function() {};\n    \n    this.push = {\n        initialize: function() {\n            return Promise.reject('Not implemented');\n        },\n        setScheduledNotify: function() {\n            return Promise.reject('Not implemented');\n        }\n    };\n\n    /**\n    * @ngdoc function\n    * @name socialShare\n    * @methodOf Stargate\n    *\n    * @description socialShare\n    *\n    */\n    this.socialShare = function() {};\n\n    /**\n    * @ngdoc function\n    * @name socialShareAvailable\n    * @methodOf Stargate\n    *\n    * @description socialShareAvailable\n    *\n    */\n    this.socialShareAvailable = function() {};\n    \n    /**\n    * @ngdoc function\n    * @name setStatusbarVisibility\n    * @methodOf Stargate\n    *\n    * @description setStatusbarVisibility\n    *\n    */\n    this.setStatusbarVisibility = function() {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 0\n// module chunks = 0","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise-polyfill/promise.js\n// module id = 1\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 2\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 3\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}

/* stargatejs-web 1.0.0 */